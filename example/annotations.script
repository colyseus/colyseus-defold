local Colyseus = require "colyseus.client"

---@type Client
local client
---@type Room
local room

function init(self)
    msg.post(".", "acquire_input_focus")


    -- Add initialization code here
    -- Remove this function if not needed
    client = Colyseus.new("ws://localhost:2567")

    -- join "demo" room
    client:join_or_create("my_room", nil, function(err, _room)
        if (err) then
            print("JOIN ERROR: " .. err)
            return
        end

        room = _room

        -- print("PLAYERS:")
        -- pprint(room.state.players)
        -- pprint(room.state.messages)
        print("successfully joined '" .. room.name .. "'")

        room.state.messages['on_add'] = function(msg, i)
            print("message arrived", msg.message)
        end

        room.state.players['on_add'] = function(player, i)
            print("new player")
            pprint(player)
            player['on_change'] = function(changes)
                print("player changed")
                pprint(changes)
            end
        end

        room.state['on_change'] = function(changes)
            -- print("state changes")
            -- pprint(changes)
        end

        room:on_message("broadcast", function(message)
            print("colyseus-defold: 'broadcast' message received =>")
            pprint(message)
        end)

        room:on_message("data", function(message)
            print("colyseus-defold: 'data' message received =>")
            pprint(message)
        end)

        room:on("statechange", function(state)
            -- room:send("Hello world!")
            -- print("STATE CHANGE")
            -- pprint(state)
        end)

        room:on("leave", function()
            print("left '" .. room.name .. "'")
        end)

        room:send("type1", { hello = "world" })
        room:send(0, { hello = "world" })


    end)

end

function final(self)
    -- Add finalization code here
    -- Remove this function if not needed
    msg.post(".", "release_input_focus")
end

function update(self, dt)
    -- Add update code here
    -- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
    -- Add message-handling code here
    -- Remove this function if not needed
end

function on_input(self, action_id, action)
    -- Add input-handling code here
    -- Remove this function if not needed
    if action_id == hash("click") and action.pressed then
        client.push:register()
    end
end

function on_reload(self)
    -- Add reload-handling code here
    -- Remove this function if not needed
end
